<?xml version="1.0" encoding="UTF-8"?>

<profile name="VMware-VCloud" version="3.4-SNAPSHOT">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="com.vmware.vcloud.api.rest.openapi.impl.extensibility.DefinedEntityHandler.getDefinedEntitiesByEntityType" name="Entity access"/>
				<function pattern="com.vmware.vcloud.security.web.RestSessionFilter.doLogin" name="User login"/>
				<function pattern="com.vmware.vcloud.common.event.impl.EventPublishingAgent.deleteOldEvents" name="Delete old events"/>
				<function pattern="com.vmware.vcloud.backendbase.management.system.SecurityServiceImpl.validateVcdJwt" name="Validate security token"/>
				<function pattern="com.vmware.vcloud.security.web.RestSessionFilter.setVcdJwtToken" name="Set security token"/>
				<function pattern="com.vmware.vcloud.common.main.CloudLauncher.main" name="VMware VCloud main loop"/>
				<function pattern="com.vmware.vcloud.common.persist.Conversation.get" name="Conversation access"/>
				<function pattern="com.vmware.vcloud.common.activity.dao.impl.ActivityQueueServiceImpl.claimNextRunnableActivity" name="Claim next activity"/>
				<function pattern="com.vmware.vcloud.common.activity.dao.impl.ActivityQueueServiceImpl.lambda$claimNextRunnableActivity" name="Activity execution"/>
				<function pattern="com.vmware.vcloud.heartbeat.impl.CellLivenessMonitor.safelyLoadCellSpec" name="Laod cell spec"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<!-- XStream -->
				<!--operation pattern="com.thoughtworks.xstream." name="XML serialization operation"/-->
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<executor pattern="com.vmware.vcloud.common.main.CloudLauncher.main" name="VMware VCloud main"/>
				<executor pattern="com.vmware.vcloud.common.event.impl.EventPublishingAgent$PublishingRunner.run" name="VMware event publisher"/>
				<executor pattern="com.vmware.vcloud.activity.executors.ActivityRunner.run" name="VMware activity runner"/>
				<executor pattern="com.vmware.vcloud.activity.toolkit.queueing.DefaultActivityQueueProcessor$1.run" name="VMware activity queue processor"/>
				<executor pattern="com.vmware.cell.heartbeat.impl.HeartbeatServiceImpl$HeartbeatRunner.run" name="VMware heartbeat runner"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!--executor_thread_name pattern="thread pattern" name="Thread type name"/-->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.vmware.vcloud.common.activity.RemoteActivityEventRelay.lambda$new" name="VMware remote activity event loop waiting" size="7"/>
				<exclude pattern="java.lang.Thread.sleep;com.vmware.vcloud.activity.toolkit.queueing.DefaultActivityQueueProcessor.dequeueElement;com.vmware.vcloud.activity.toolkit.queueing.DefaultActivityQueueProcessor$1.run" name="VMware default activity toolkit event queue sleep" size="3"/>
				<exclude pattern="java.lang.Thread.sleep;com.vmware.vcloud.vimproxy.internal.impl.PCEventProcessingActivity.sleep;com.vmware.vcloud.vimproxy.internal.impl.PCEventProcessingActivity$ProcessEventsPhase.invoke;com.vmware.vcloud.activity.executors.ActivityRunner.runPhase;com.vmware.vcloud.activity.executors.ActivityRunner.run" name="VMware PC event phase sleep" size="10"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.vmware.vcloud.progress.impl.TaskProgressWriter.run" name="VMware task progress writer wait" size="5"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.vmware.vcloud.progress.impl.TaskStepProgressWriter.run" name="VMware task step writer wait" size="5"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.DelayQueue.take;com.vmware.vcloud.vimvalidation.impl.ValidationServiceImpl$ValidationThread.run" name="VMware validation service wait" size="5"/>
				<exclude pattern="java.util.concurrent.LinkedBlockingDeque.take;com.vmware.vcloud.common.cell.jms.activemq.broadcasting.VCDBroadcastEndpoint.receiveBroadcast;org.apache.activemq.artemis.core.cluster.DiscoveryGroup$DiscoveryRunnable.run" name="VMware discovery broadcast wait"/>	
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.vmware.ssdc.backend.services.UIThumbnailRequestConsumer.execute;com.vmware.ssdc.backend.services.UIThumbnailRequestConsumer$1.run" name="UIThumbnailRequest consumer wait" size="11"/>	
				<exclude pattern="java.lang.Thread.sleep;com.vmware.vcloud.common.cell.jms.activemq.broadcasting.VCDBroadcastEndpoint$2.run" name="VMware VCDBroadcastEndpoint sleep" size="8"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.vmware.vcloud.common.cell.jms.activemq.impl.JmsFacadeService.senderRun" name="VMware JMS facade sender waiting" size="11"/>	
				<exclude pattern="org.eclipse.jetty.io.ManagedSelector$SelectorProducer.select;org.eclipse.jetty.io.ManagedSelector$SelectorProducer.produce;org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.produceTask;org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.tryProduce;org.eclipse.jetty.util.thread.strategy.AdaptiveExecutionStrategy.run;com.vmware.vcloud.common.threading.ExtendedJettyQueuedThreadPool$CleaningRunnable.run" name="VMware Jetty executor" size="19"/>	
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
