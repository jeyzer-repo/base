<?xml version="1.0" encoding="UTF-8"?>

<profile name="Adobe" version="3.2">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="com.adobe.granite.repository.impl.CRX3RepositoryImpl.login" name="Adobe authentication"/>
				<function pattern="com.day.cq.rewriter.htmlparser.HtmlParser.write" name="Adobe HTML write"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<!-- operation pattern="org.apache.commons.net.ftp.FTPClient._openDataConnection" name="FTP connection creation" type="Network"/-->
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<!--executor pattern="HttpServlet.service" name="HTTP request"/-->
				<!--executor pattern="java.lang.Thread.sleep;com.amazonaws.http.IdleConnectionReaper.run" name="AWS HTTP connection reaper"/-->		<!-- Multiple line pattern -->
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!-- executor_thread_name pattern="Connection evictor" name="Connection watchdog"/-->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude pattern="java.lang.Object.wait;com.adobe.cq.social.ugcbase.dispatcher.impl.FlushServiceImpl$Worker.run" name="Adobe FlushService" size="4"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;com.day.cq.wcm.core.impl.event.ReplicateOnModification.run" name="Adobe Replicater" size="5"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.fd.fp.events.PortalEventListener$EventProcessor.run" name="Adobe Portal Event Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.workflow.core.PayloadMapCache.run" name="Adobe Payload Map Cache" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.workflow.core.launcher.WorkflowLauncherListener.run" name="Adobe Workflow Launcher Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.maintenance.impl.TaskScheduler.processUpdateQueue;com.adobe.granite.maintenance.impl.TaskScheduler.access" name="Adobe Task Scheduler" size="8"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.day.crx.statistics.Statistics.run" name="Adobe Stats" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingDeque.takeFirst;java.util.concurrent.LinkedBlockingDeque.take;com.adobe.cq.wcm.launches.impl.LaunchesEventHandler$EventProcessor.run" name="Adobe Event Processor" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.workflow.core.inboxshare.InboxPreferencesChangeListener.run" name="Adobe Inbox Preferences Change Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.workflow.core.payloadmap.PayloadMoveListener.run" name="Adobe Payload Move Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos;java.util.concurrent.LinkedBlockingQueue.poll;com.day.cq.dam.core.impl.DamActivityStreamRecorder.run" name="Adobe Dam Activity Stream Recorder" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos;java.util.concurrent.LinkedBlockingQueue.poll;com.day.cq.dam.core.impl.ui.preview.FolderPreviewUpdaterImpl.run" name="Adobe Folder Preview Updater" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;java.util.concurrent.LinkedBlockingQueue.take;com.adobe.granite.workflow.core.inboxshare.ExplicitShareEventListener.run" name="Adobe Explicit Share Event Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos;java.util.concurrent.LinkedBlockingQueue.poll;com.day.cq.wcm.core.impl.event.RepositoryChangeEventListener.run" name="Adobe Repository Change Event Listener" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;com.day.cq.replication.impl.ChainReplicationService.run" name="Adobe Chain Replication Service" size="5"/>		<!-- Multiple line pattern -->
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
