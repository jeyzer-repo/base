<?xml version="1.0" encoding="UTF-8"?>

<profile name="Netty" version="3.2-SNAPSHOT">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks" name="Netty tasks execution"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<operation pattern="io.netty.channel.AbstractChannelHandlerContext.writeAndFlush" 	name="Netty write"/>
				<operation pattern="io.netty.bootstrap.Bootstrap.connect" name="Netty botstrap"		   						type="Network"/>
				<operation pattern="io.netty.util.internal.SocketUtils.connect" name="Netty connection opening"				type="Network"/>
				<operation pattern="io.netty.channel.socket.nio.NioSocketChannel.doWrite" name="Netty socket writing"		type="Network"/>
				<operation pattern="io.netty.channel.socket.nio.NioSocketChannel.doReadBytes" name="Netty socket reading"	type="Network"/>
				<operation pattern="io.netty." name="Netty operation"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<executor pattern="io.netty.util.concurrent.FastThreadLocalRunnable.run" name="Netty thread"/>
				<executor pattern="io.netty.util.ThreadDeathWatcher$Watcher.run" name="Netty ThreadDeathWatcher thread"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!--executor_thread_name pattern_regex="thread pattern" name="Thread type name"/-->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude pattern="sun.misc.GC$Daemon.run" name="GC"/-->
				<exclude pattern="sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;io.netty.channel.nio.SelectedSelectionKeySetSelector.select;io.netty.channel.nio.NioEventLoop.select;io.netty.channel.nio.NioEventLoop.run" name="Netty select loop"/>		<!-- Multiple line pattern -->
				<exclude pattern="sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;sun.nio.ch.SelectorImpl.select;io.netty.channel.nio.SelectedSelectionKeySetSelector.select;io.netty.channel.nio.NioEventLoop.select;io.netty.channel.nio.NioEventLoop.run" name="Netty select2 loop"/>		<!-- Multiple line pattern -->
				<exclude pattern="sun.nio.ch.SelectorImpl.select;io.netty.channel.nio.NioEventLoop.select;io.netty.channel.nio.NioEventLoop.run" name="Netty select3 loop" size="10"/>
				<exclude pattern="sun.nio.ch.EPoll.wait;sun.nio.ch.EPollSelectorImpl.doSelect;sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;io.netty.channel.nio.NioEventLoop.select;io.netty.channel.nio.NioEventLoop.run" name="Netty select4 loop"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.LinkedBlockingQueue.take;io.netty.util.concurrent.SingleThreadEventExecutor.takeTask;io.netty.util.concurrent.DefaultEventExecutor.run" name="Netty executor"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.LinkedBlockingQueue.poll;io.netty.util.concurrent.SingleThreadEventExecutor.takeTask;io.netty.util.concurrent.DefaultEventExecutor.run" name="Netty executor 2"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.lang.Thread.sleep;io.netty.util.HashedWheelTimer$Worker.waitForNextTick;io.netty.util.HashedWheelTimer$Worker.run" name="Netty wheel timer"/>		<!-- Multiple line pattern -->
				<exclude pattern="io.netty.channel.epoll.Native.epollWait;io.netty.channel.epoll.EpollEventLoop.epollWaitNoTimerChange;io.netty.channel.epoll.EpollEventLoop.run" name="Netty event loop" size="9"/>		<!-- Multiple line pattern -->
				<exclude pattern="io.netty.channel.epoll.EpollEventLoop.epollWait;io.netty.channel.epoll.EpollEventLoop.run;io.netty.util.concurrent.SingleThreadEventExecutor$4.run" name="Netty fast thread event loop" size="8"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.lang.Thread.sleep;io.netty.util.ThreadDeathWatcher$Watcher.run" name="Netty ThreadDeathWatcher" size="4"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill;java.util.concurrent.SynchronousQueue$TransferStack.transfer;java.util.concurrent.SynchronousQueue.poll;org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.reservedWait;org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run;org.eclipse.jetty.util.thread.QueuedThreadPool.runJob" name="Netty Reserved executor" size="10"/>		<!-- Multiple line pattern -->
				<exclude pattern="org.jboss.netty.util.HashedWheelTimer$Worker.waitForNextTick;org.jboss.netty.util.HashedWheelTimer$Worker.run;org.jboss.netty.util.ThreadRenamingRunnable.run" name="Netty Thread renaming" size="5"/>
				<exclude pattern="org.jboss.netty.channel.socket.nio.AbstractNioSelector.select;org.jboss.netty.channel.socket.nio.AbstractNioSelector.run;org.jboss.netty.channel.socket.nio.AbstractNioWorker.run;org.jboss.netty.channel.socket.nio.NioWorker.run;org.jboss.netty.util.ThreadRenamingRunnable.run" name="Netty Thread renaming poller" size="15"/>
				<exclude pattern="org.jboss.netty.channel.socket.nio.AbstractNioSelector.select;org.jboss.netty.channel.socket.nio.AbstractNioSelector.run;org.jboss.netty.channel.socket.nio.NioClientBoss.run;org.jboss.netty.util.ThreadRenamingRunnable.run" name="Netty Thread renaming poller 2" size="14"/>
				<exclude pattern="sun.nio.ch.SelectorImpl.select;org.jboss.netty.channel.socket.nio.NioServerBoss.select;org.jboss.netty.channel.socket.nio.AbstractNioSelector.run;org.jboss.netty.channel.socket.nio.NioServerBoss.run;org.jboss.netty.util.ThreadRenamingRunnable.run" name="Netty Thread renaming poller 3" size="14"/>
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->		 
			</exclude_thread_names>
		</patterns>

</profile>
