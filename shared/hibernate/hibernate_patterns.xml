<?xml version="1.0" encoding="UTF-8"?>

<profile name="Hibernate" version="3.3-SNAPSHOT">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<!--function pattern="javax.xml.parsers.DocumentBuilderFactory.newInstance" name="DOM builder loading"/-->
				<function pattern="org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build" name="Hibernate entity manager build"/>
				<function pattern="org.jboss.as.jpa.hibernate5.HibernatePersistenceProviderAdaptor.getBootstrap" name="Hibernate persistence provider bootstrap"/>
				<function pattern="org.hibernate.loader.Loader.list" name="Hibernate load list"/>
				<function pattern="org.hibernate.loader.Loader.loadCollectionBatch" name="Hibernate load collection batch"/>
				<function pattern="org.hibernate.loader.Loader.loadCollection" name="Hibernate load collection"/>
				<function pattern="org.hibernate.loader.Loader.loadEntity" name="Hibernate load entity"/>
				<function pattern="org.hibernate.engine.transaction.internal.TransactionImpl.commit" name="Hibernate commit"/>
				<function pattern="org.hibernate.impl.SessionImpl.flush" name="Hibernate session flush"/>
				<function pattern="org.hibernate.internal.SessionImpl.flush" name="Hibernate session flush"/>
				<function pattern="org.hibernate.loader.plan.exec.internal.AbstractLoadPlanBasedLoader.executeQueryStatement" name="Hibernate query"/>
			    <function pattern="org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister" name="Hibernate create entity persister"/>
				<function pattern="org.hibernate.internal.SessionFactoryImpl.prepareEventListeners" name="Hibernate create event listeners"/>
				<function pattern="org.hibernate.service.internal.AbstractServiceRegistryImpl.createService" name="Hibernate create service"/>
				<function pattern="org.hibernate.engine.spi.CacheInitiator.initiateService" name="Hibernate create cache"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<!-- Hibernate -->
				<operation pattern="org.hibernate.action.internal.EntityUpdateAction.execute" name="Hibernate SQL update"/>
				<operation pattern="org.hibernate.internal.SessionImpl.executeNativeUpdate" name="Hibernate SQL native update"/>
				<operation pattern="org.hibernate.action.internal.EntityInsertAction.execute" name="Hibernate SQL insert"/>
				<operation pattern="org.hibernate.impl.CriteriaImpl.list" name="Hibernate SQL fetch"/>
				<operation pattern="org.hibernate.internal.CriteriaImpl.list" name="Hibernate SQL fetch"/>
				<operation pattern="org.hibernate.pretty.MessageHelper.infoString" name="Hibernate logging"/>
				<operation pattern="org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement" name="Hibernate logging"/>
				<operation pattern="org.hibernate.id.MultipleHiLoPerTableGenerator.generate" name="Hibernate id sequence generation"/>
				<operation pattern="org.hibernate.jdbc.ConnectionManager.closeConnection" name="Hibernate close connection"/>
				<operation pattern="org.hibernate.service.jdbc.connections.internal.DatasourceConnectionProviderImpl.closeConnection" name="Hibernate close connection"/>
				<operation pattern="org.hibernate.jdbc.ConnectionManager.openConnection" name="Hibernate open connection"/>
				<operation pattern="org.hibernate.engine.jdbc.internal.LogicalConnectionImpl.getConnection" name="Hibernate get connection"/>
				<operation pattern="org.hibernate.impl.ScrollableResultsImpl.next" name="Hibernate result set fetch"/>
				<operation pattern="org.hibernate.internal.SessionImpl.close" name="Hibernate session closure"/>
				<operation pattern="org.hibernate.jpa.internal.TransactionImpl.commit" name="Hibernate transaction commit"/>
				<operation pattern="org.hibernate.cache.ehcache.internal.StorageAccessImpl.putIntoCache" name="Hibernate cache update"/>
				<operation pattern="org.hibernate.engine.query.spi.QueryPlanCache.getHQLQueryPlan" name="Hibernate HQL query plan access"/>
				<operation pattern="org.hibernate.boot.archive.scan.spi.AbstractScannerImpl.scan" name="Hibernate boot archive scan"/>
				<operation pattern="org.hibernate.validator.engine.ValidatorImpl.validate" name="Hibernate bean validation"/>
				<operation pattern="org.hibernate." name="Hibernate operation"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<!--executor pattern="HttpServlet.service" name="HTTP request"/-->
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!--executor_thread_name pattern="thread pattern" name="Thread type name"/-->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude pattern="sun.misc.GC$Daemon.run" name="GC"/-->
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
