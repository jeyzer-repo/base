<?xml version="1.0" encoding="UTF-8"?>

<profile name="Kafka" version="3.3-SNAPSHOT">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="org.apache.kafka.clients.NetworkClient.handleTimedOutConnections" name="Kafka handle timed out connections"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<operation pattern="org.apache.kafka.clients.NetworkClient.poll" name="Kafka message poll" type="Network"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<executor pattern="org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run" name="Kafka heartbeat"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<executor_thread_name pattern_regex="kafka_consumer_task_executor" name="Kafka task executor"/>
				<executor_thread_name pattern_regex="kafka-producer-network-thread" name="Kafka network producer"/>
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude pattern="sun.misc.GC$Daemon.run" name="GC"/-->
				<exclude pattern="sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;org.apache.kafka.common.network.Selector.select" name="Kafka selector"/>
				<exclude pattern="java.lang.Object.wait;org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run" name="Kafka heartbeat"/>
				<exclude pattern="org.apache.kafka.common.utils.Time.timer;org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup;org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run" name="Kafka heartbeat 2"/>
				<exclude pattern="java.util.concurrent.locks.ReentrantLock.lock;org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.poll;org.apache.kafka.clients.consumer.internals.ConsumerNetworkClient.pollNoWakeup;org.apache.kafka.clients.consumer.internals.AbstractCoordinator$HeartbeatThread.run" name="Kafka heartbeat 2" size="10"/>
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->		 
			</exclude_thread_names>
		</patterns>

</profile>
