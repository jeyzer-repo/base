<?xml version="1.0" encoding="UTF-8"?>

<profile name="Spring" version="3.2">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<!--function pattern="javax.xml.parsers.DocumentBuilderFactory.newInstance" name="DOM builder loading"/-->
				<function pattern="org.springframework.batch.repeat.support.ResultHolderResultQueue.put" name="Spring task - put result"/>
				<function pattern="org.springframework.batch.repeat.support.ResultHolderResultQueue.take" name="Spring task - take result"/>
				<function pattern="org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException" name="Spring - exception processing"/>
				<function pattern="org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage" name="Spring - listening for message"/>
				<function pattern="org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization" name="Spring - bean factory init"/>
				<function pattern="org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance" name="Spring - create bean"/>
				<function pattern="org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection" name="Spring - get db connection"/>
				<function pattern="org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run" name="Spring error handling"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<operation pattern="org.springframework.web.client.RestTemplate.doExecute" name="Spring - REST call"/>
				<operation pattern="org.springframework.boot.loader.jar." name="Jar access"/>
				<operation pattern="org.springframework.data.redis." name="Spring Redis operation"/>
				<operation pattern="org.springframework." name="Spring framework operation"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<executor pattern="org.springframework.scheduling.concurrent.ReschedulingRunnable.run" name="Spring scheduler"/>
				<executor pattern="org.springframework.boot.loader.MainMethodRunner.run" name="Spring boot main"/>
				<executor pattern="org.springframework.cloud.consul.binder.ConsulInboundMessageProducer$1.run" name="Spring inbound message producer"/>
				<executor pattern="org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run" name="Spring error handler"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<executor_thread_name pattern="SpringContextShutdownHook" name="Spring shutdown hook"/>
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude pattern="sun.misc.GC$Daemon.run" name="GC"/-->
				<exclude pattern="java.lang.Thread.sleep;org.apache.catalina.core.StandardServer.await;org.springframework.boot.web.embedded.tomcat.TomcatWebServer$1.run" name="Spring Tomcat main waiting"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.lang.Thread.sleep;org.apache.catalina.core.StandardServer.await;org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer$2.run" name="Spring Tomcat context main waiting"/>		<!-- Multiple line pattern -->
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
