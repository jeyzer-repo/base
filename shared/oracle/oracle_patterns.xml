<?xml version="1.0" encoding="UTF-8"?>

<profile name="Oracle" version="2.8">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="oracle.jdbc.OracleDatabaseMetaData.getClientInfoProperties" name="Oracle client info access"/>
				<function pattern="oracle.jdbc.driver.PhysicalConnection.pingDatabase" name="Oracle database ping"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<!--  Oracle JDBC driver -->
				<operation pattern="oracle.jdbc.driver.PhysicalConnection.rollback" name="Oracle rollback" priority="901"					type="Oracle"/>
				<operation pattern="oracle.jdbc.driver.T4CConnection.logon" name="Oracle connection login" priority="901"					type="Oracle"/>
				<operation pattern="oracle.jdbc.pool.OracleDataSource.getPhysicalConnection" name="Oracle connection creation" 	priority="901"	type="Oracle"/>
				<operation pattern="oracle.jdbc.driver.PhysicalConnection.close" name="Oracle connection closure" priority="901"			type="Oracle"/>
				<operation pattern="oracle.net.ns.Packet.receive" name="Oracle result wait" 			priority="900"						type="Oracle"/>
				<operation pattern="oracle.net.ns.NetInputStream.read" name="Oracle read"   			priority="900"						type="Oracle"/>
				<operation pattern="oracle.jdbc.driver.T4CTTIdcb.receive" name="Oracle data received"  	priority="900"						type="Oracle"/>
				<operation pattern="oracle.net.ns.DataPacket.send" name="Oracle data sending"  			priority="900"						type="Oracle"/>
				<operation pattern="oracle.net.ns.NetOutputStream.write" name="Oracle data sending"  	priority="900"						type="Oracle"/>
				<operation pattern="oracle.jdbc.driver." name="Oracle JDBC driver operation"  			priority="900"/>
				<operation pattern="oracle.jdbc.driver.ScrollableResultSet" name="Oracle result set java access"/>
				<operation pattern="oracle.sql.CharacterSet.stringToAL32UTF8" name="Oracle UTF8 conversion"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<executor pattern="oracle.jdbc.driver.BlockSource$ThreadedCachingBlockSource$BlockReleaser.run" name=""/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<executor_thread_name regex_pattern="^ONS Listener Thread" name="Oracle RAC Notification Service"/>
				<executor_thread_name regex_pattern="^ONS-task-thread" name="Oracle RAC task"/>
				<executor_thread_name regex_pattern="^UCP-CriticalTaskExecutorThread" name="Oracle Thread Caching Block Source Releaser"/>
				<executor_thread_name regex_pattern="^UCP Clock" name="Oracle Clock"/>
				<executor_thread_name regex_pattern="^oracle.ucp.actors.InterruptableActor-control" name="Oracle Interruptable Actor Control"/> <!-- yes, this is the tread name -->
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude pattern="java.net.SocketInputStream.read;oracle.ons.DefaultSocketManager$ListeningThread.run" name="Oracle RAC Notification Service waiting for notification" size="6"/>
				<exclude pattern="oracle.ons.Subscriber.take;oracle.ons.Subscriber.internalReceive;oracle.ons.Subscriber.receive;oracle.ucp.common.LoadBalancer$1.handleNotifications" name="Oracle UCP listener waiting for notification" size="12"/>
				<exclude pattern="oracle.ons.Subscriber.take;oracle.ons.Subscriber.internalReceive;oracle.ons.Subscriber.receive;oracle.ucp.common.FailoverDriver$1.handleNotifications;oracle.ucp.common.FailoverDriver$1.run" name="Oracle UCP failover waiting for notification" size="12"/>
				<exclude pattern="java.lang.Object.wait;oracle.jdbc.driver.BlockSource$ThreadedCachingBlockSource$BlockReleaser.run" name="Oracle Thread Caching Block Source Releaser" size="2"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;oracle.ucp.common.Clock.lambda$static$0" name="Oracle Clock" size="6"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos;java.util.concurrent.DelayQueue.poll;oracle.ons.ThreadPoolWorkloadManager$ExecutorThread.run" name="Oracle ONS thread pool" size="5"/>
				<exclude pattern="java.lang.Thread.sleep;oracle.ucp.actors.InterruptableActor.lambda$buildControlThread$1" name="Oracle UCP Interruptable Actor" size="4"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;oracle.ucp.actors.InterruptableActor.lambda$buildControlThread$1" name="Oracle UCP Interruptable Actor 2" size="6"/>
				<exclude pattern="java.util.concurrent.locks.LockSupport.parkNanos;java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos;java.util.concurrent.DelayQueue.poll;oracle.ons.ThreadPoolWorkloadManager$ExecutorThread.run" name="Oracle ONS task" size="5"/>
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
