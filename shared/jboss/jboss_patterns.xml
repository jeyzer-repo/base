<?xml version="1.0" encoding="UTF-8"?>

<profile name="JBoss" version="2.6">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<!-- JBoss -->
				<function pattern="org.jboss.system.server.profileservice.hotdeploy.HDScanner.scan" name="JBoss hot deploy scanner"/>
				<function pattern="org.jboss.logging.Log4jService$URLWatchTimerTask.run" name="JBoss log4j file scanner"/>
				<function pattern="org.jboss.resource.connectionmanager.InternalManagedConnectionPool.fillToMin" name="JBoss db connection pool filling"/>
				<function pattern="org.jboss.logging.Logger.error" name="JBoss error logging"/>
				<function pattern="org.jboss.web.CatalinaLogger_$logger.exceptionDuringService" name="JBoss service exception"/>
				<function pattern="org.jboss.as.web.security.JBossWebRealm.authenticate" name="JBoss authentication"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<!-- JBoss -->
				<operation pattern="org.jboss.security.authentication.JBossCachedAuthenticationManager.authenticate" name="JBoss authenticate"/>
				<operation pattern="org.jboss.resource.adapter.jdbc.CheckValidConnectionSQL.isValidConnection" name="JBoss JDBC connection testing"/>
				<operation pattern="org.jboss.classloader.spi.base.BaseClassLoader.getResource" name="JBoss ressource loading"				type="Class loader"/>
				<operation pattern="org.jboss.jca.adapters.jdbc.WrapperDataSource.getConnection" name="JBoss db connection pool access"/>				
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<!-- locker pattern="java.util.concurrent.locks.LockSupport.park" name="LockSupport"/-->
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<!-- JBoss -->
				<executor pattern="org.jboss.resource.adapter.mail.inflow.NewMsgsWorker.run" name="JBoss message worker"/>
				<executor pattern="org.jboss.threads.JBossThread.run" name="JBoss thread"/>
				<executor pattern="org.jboss.modules.ref.References$ReaperThread.run" name="JBoss reaper thread"/>
				<executor pattern="org.jboss.as.jacorb.service.CorbaORBService$ORBRunner.run" name="JBoss Jacorb embedded service"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<!-- JBoss -->
				<executor_thread_name pattern="HDScanner" name="JBoss disk scanner"/>
				<executor_thread_name pattern="Timer-Log4jService" name="JBoss Log4j log file manager"/>
				<executor_thread_name pattern="JCA PoolFiller" name="JBoss db connection pool manager"/>
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- JBoss -->
				<exclude pattern="org.jboss.resource.adapter.mail.inflow.NewMsgsWorker.run" name="JBoss message worker" size="10"/>
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await;org.jboss.threads.QueueExecutor.takeTask;org.jboss.threads.QueueExecutor.access;org.jboss.threads.QueueExecutor$Worker.run" name="Worker thread waiting for a task to execute from a blocking queue"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.locks.LockSupport.parkNanos;org.jboss.threads.EnhancedQueueExecutor$PoolThreadNode.park;org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run" name="Worker thread waiting for a task to execute from a JBoss enhanced queue"/>		<!-- Multiple line pattern -->
				<exclude pattern="org.jboss.modules.ref.References$ReaperThread.run" name="JBoss reaper thread" size="4"/>
				<exclude pattern="org.jboss.as.jacorb.service.CorbaORBService$ORBRunner.run" name="JBoss Jacorb embedded service" size="5"/>
				<exclude pattern="org.jboss.threads.JBossThread.run" name="JBoss thread" size="9"/>
				<exclude pattern="org.jboss.jca.core.connectionmanager.pool.mcp.PoolFiller.run" name="JCA PoolFiller" size="4"/>
				<exclude pattern="org.jboss.jca.core.connectionmanager.pool.idle.IdleRemover$IdleRemoverRunner.run" name="JBoss remover thread" size="7"/>
				<exclude pattern="org.xnio.nio.WorkerThread.run" name="JBoss XNIO thread" size="7"/>
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<!-- exclude_thread_name pattern_regex="RMI TCP.*" name="RMI"/-->
				<!-- exclude_thread_name pattern="JMX server connection timeout" name="RMI"/-->
			</exclude_thread_names>
		</patterns>

</profile>
