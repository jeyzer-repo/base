<?xml version="1.0" encoding="UTF-8"?>

<profile name="Tomcat" version="3.1">

		<!-- 
			Pattern rule appliance by priority :
			0 - locker (1004)
			1 - stack_size_interest (1003)
			2 - exclude_thread_name (1002)
			3 - exclude (1001)
			4 - locker  (7)
			5 - function  (6)
			6 - function_discovery  (5)
			7 - executor  (4)
			8 - executor_thread_name (3)
			9 - operation (2)
			10 - operation_discovery (1)
			Exclude, function, operation and executor patterns priorities can be overriden by pattern attribute.
	 	-->
		<patterns>
			<!-- In pattern attribute, use semicolon separator to declare multiple line patterns -->
			<functions>
				<function pattern="org.apache.catalina.core.StandardHost.startInternal" name="Tomcat host startup"/>
				<function pattern="org.apache.catalina.startup.HostConfig.lifecycleEvent" name="Tomcat host startup"/>
				<function pattern="org.apache.catalina.startup.Catalina.start" name="Tomcat startup"/>
				<function pattern="org.apache.catalina.ha.tcp.ReplicationValve.sendReplicationMessage" name="Tomcat cluster send replication message"/>
				<function pattern="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor.sendAsyncData" name="Tomcat cluster send async message"/>
				<function pattern="org.apache.catalina.tribes.transport.ReceiverBase.messageDataReceived" name="Tomcat cluster message processing"/>
				<function pattern="org.apache.coyote.ajp.AjpProtocol$AjpConnectionHandler.createProcessor" name="Tomcat AJP processor creation"/>
				<function pattern="org.apache.catalina.webresources.StandardRoot.gc" name="Tomcat web resource gc"/>
				<function pattern="org.apache.catalina.users.MemoryUserDatabase.backgroundProcess" name="Tomcat in memory db"/>
				<function pattern="org.apache.tomcat.util.net.SocketWrapperBase.close" name="Tomcat close socket"/>
			</functions>
			<operations>
				<!-- Operation patterns apply for the first 20 lines of the thread dump                	 -->
				<!-- Exception : patterns ending with '.' apply for the first 2 lines of the thread dump -->
				<operation pattern="sun.net.www.protocol.https.Handler.openConnection" name="HTTPS connection opening"						type="Network"/>
				<operation pattern="org.apache.coyote.http11.InternalOutputBuffer.realWriteBytes" name="Sending HTTP page back to client" 	type="Network"/>
				<operation pattern="tomcat5.CoyoteRequest.getParameter" name="Http request parameter access"/>
				<operation pattern="org.apache.catalina.loader.WebappClassLoader.loadClass" name="Tomcat class loading"						type="Class loader"/>
				<operation pattern="tomcat5.CoyoteRequest.doGetSession" name="Tomcat 5 J2EE session access"/>
				<operation pattern="catalina.connector.Request.getSession" name="Tomcat J2EE session access"/>
				<operation pattern="org.apache.catalina.tribes.group.GroupChannel.send" name="Tomcat cluster message sending"/>
				<operation pattern="org.apache.catalina.tribes.group.GroupChannel.messageReceived" name="Tomcat cluster message reception"/>
				<operation pattern="org.apache.catalina.tribes.transport.PooledSender.getSender" name="Tomcat cluster message sender access"/>
				<operation pattern="org.apache.coyote.Response.doWrite" name="Tomcat write response" 													type="Network"/>
				<operation pattern="org.apache.catalina.tribes.transport.nio.ParallelNioSender.doLoop" name="Tomcat cluster sent message result wait" 	type="Network"/>
				<operation pattern="org.apache.catalina.tribes.group.interceptors.TcpFailureDetector.memberDisappeared" name="Tomcat cluster member disappearance handling"/>
				<operation pattern="org.apache.coyote.ajp." name="AJP operation"/>
			</operations>
			<lockers>
				<!-- Locker patterns apply for the first 20 lines of the thread dump                 -->
  				<locker pattern="java.lang.Object.wait;org.apache.catalina.tribes.transport.PooledSender$SenderQueue.getSender" name="Wait for sender"/>
			</lockers>
			<executors>
				<!-- Executor patterns must be available within the 20 first lines of the thread dump -->
				<!-- Tomcat -->
				<executor pattern="org.apache.tomcat.util.net.JIoEndpoint$Worker.run" name="Tomcat HTTP connector"/>
				<executor pattern="org.apache.catalina.startup.Bootstrap.main" name="Tomcat bootstrap thread"/>
				<executor pattern="org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run" name="Tomcat background thread"/>
				<executor pattern="org.apache.tomcat.util.net.NioBlockingSelector$BlockPoller.run" name="Tomcat NIO thread"/>
				<executor pattern="org.apache.tomcat.util.net.AprEndpoint$Poller.run" name="Tomcat APR Poller thread"/>
				<executor pattern="org.apache.tomcat.util.net.AprEndpoint$Acceptor.run" name="Tomcat APR Acceptor thread"/>
				<executor pattern="org.apache.catalina.tribes.group.interceptors.MessageDispatchInterceptor" name="Tomcat cluster message dispatched thread"/>
				<executor pattern="org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun" name="Tomcat socket processor"/>
			</executors>
			<executor_thread_names>
				<!-- Executor pattern based on the thread name. Regular expression recommended -->
				<executor_thread_name pattern_regex=".*-startStop" name="Tomcat start stop thread"/>
				<executor_thread_name pattern_regex="^http-nio-" name="Tomcat NIO http thread"/>
				<executor_thread_name pattern_regex="^Tribes-Task-Receiver-" name="Tomcat cluster thread"/>
			</executor_thread_names>
			<excludes>
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude pattern="tomcat.util.net.NioBlockingSelector$BlockPoller.run" name="Tomcat NIO thread" size="7"/>
				<exclude pattern="org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor.run" name="Tomcat container background thread" size="3"/>
				<exclude pattern="org.apache.tomcat.util.net.AprEndpoint$Poller.run" name="Tomcat APR Poller thread" size="3"/>
				<exclude pattern="org.apache.tomcat.util.net.AprEndpoint$Acceptor.run" name="Tomcat APR Acceptor thread" size="3"/>
				<exclude pattern="org.apache.coyote.ajp.AjpProcessor.process" name="Tomcat AJP processor thread" size="11"/>
				<exclude pattern="org.apache.coyote.AbstractProtocol$AsyncTimeout.run" name="Tomcat Coyote timer thread" size="3"/>
				<exclude pattern="org.apache.tomcat.util.net.JIoEndpoint$Worker.run" name="Tomcat JIoEndpoint worker" size="5"/>
				<exclude pattern="org.apache.tomcat.util.net.JIoEndpoint$Poller.run" name="Tomcat JIoEndpoint poller" size="3"/>
				<exclude pattern="org.apache.tomcat.util.net.JIoEndpoint$Acceptor.run" name="Tomcat JIoEndpoint acceptor" size="7"/>
				<exclude pattern="org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run" name="Tomcat thread worker" size="14"/>
				<exclude pattern="org.apache.coyote.http11.Http11Processor.process" name="Tomcat HTTP 11 processor" size="5"/>
				<exclude pattern="org.apache.tomcat.util.threads.TaskQueue.poll;java.util.concurrent.ThreadPoolExecutor.getTask;java.util.concurrent.ThreadPoolExecutor.runWorker" name="Worker thread waiting for a task to execute from a Tomcat take blocking queue"/>		<!-- Multiple line pattern -->
				<exclude pattern="sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;org.apache.tomcat.util.net.NioEndpoint$Poller.run" name="NIO Endpoint waiting on select"/>		<!-- Multiple line pattern -->
				<exclude pattern="org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept;org.apache.tomcat.util.net.NioEndpoint.serverSocketAccept;org.apache.tomcat.util.net.Acceptor.run" name="NIO2 acceptor thread waiting for a client to connect"/>		<!-- Multiple line pattern -->				
				<exclude pattern="java.lang.Thread.sleep;org.apache.catalina.core.StandardServer.await;org.apache.catalina.startup.Catalina.await;org.apache.catalina.startup.Catalina.start" name="Tomcat main waiting"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.net.ServerSocket.accept;org.apache.catalina.core.StandardServer.await;org.apache.catalina.startup.Catalina.await;org.apache.catalina.startup.Catalina.start" name="Tomcat main waiting 2"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.LinkedBlockingQueue.take;org.apache.tomcat.util.threads.TaskQueue.take;org.apache.tomcat.util.threads.TaskQueue.take;java.util.concurrent.ThreadPoolExecutor.getTask;java.util.concurrent.ThreadPoolExecutor.runWorker" name="Tomcat worker thread waiting for a task to execute from a link blocking queue"/>		<!-- Multiple line pattern -->				
				<exclude pattern="java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly;java.util.concurrent.CountDownLatch.await;sun.nio.ch.PendingFuture.get;org.apache.tomcat.util.net.Nio2Endpoint$Acceptor.run" name="Tomcat NIO2 acceptor thread waiting for a client to connect"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.util.concurrent.LinkedBlockingDeque.pollFirst;java.util.concurrent.LinkedBlockingDeque.poll;org.apache.juli.AsyncFileHandler$LoggerThread.run" name="Tomcat JULI file writer waiting"/>		<!-- Multiple line pattern -->
				<exclude pattern="sun.nio.ch.ServerSocketChannelImpl.accept;org.apache.tomcat.util.net.NioEndpoint$Acceptor.run;java.lang.Thread.run" name="Tomcat server waiting"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.net.AbstractPlainDatagramSocketImpl.receive;java.net.DatagramSocket.receive;org.apache.catalina.tribes.membership.McastServiceImpl.receive;org.apache.catalina.tribes.membership.McastServiceImpl$ReceiverThread.run" name="Tomcat Tribes multicast waiting" size="5"/>		<!-- Multiple line pattern -->
				<exclude pattern="java.net.ServerSocket.implAccept;java.net.ServerSocket.accept;org.apache.activemq.transport.tcp.TcpTransportServer.run;java.lang.Thread.run" name="Tomcat server waiting" size="6"/>		<!-- Multiple line pattern -->
				<exclude pattern="sun.nio.ch.EPollArrayWrapper.poll;sun.nio.ch.EPollSelectorImpl.doSelect;sun.nio.ch.SelectorImpl.lockAndDoSelect;sun.nio.ch.SelectorImpl.select;org.apache.catalina.tribes.transport.nio.NioReceiver.listen;org.apache.catalina.tribes.transport.nio.NioReceiver.run" name="Tomcat Tribes NIO receiver waiting" size="8"/>		<!-- Multiple line pattern -->
			</excludes>
			<exclude_thread_names>
				<!-- Exclude stack based on thread name. Regular expression based recommended -->
				<!-- If stack size is equal or below the limit (optional size attribute), thread stack is excluded -->
				<exclude_thread_name pattern_regex=".*-startStop" name="Tomcat start stop thread" size="8"/>
				<exclude_thread_name pattern_regex="^http-nio-" name="Tomcat NIO http thread" size="11"/>
			</exclude_thread_names>
		</patterns>

</profile>
